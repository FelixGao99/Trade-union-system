@model TradeUnionManageSystem.BLL.Models.Employee

@{
    ViewBag.Title = "Create";
}

@{
    List<SelectListItem> gender = new List<SelectListItem> {
        new SelectListItem { Text = "男", Value = "0",Selected = true},
        new SelectListItem { Text = "女", Value = "1" }
    };
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Gender", gender, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { type = "date", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JobCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobCode, new { htmlAttributes = new { @class = "form-control col-md-11" } })
                @Html.ValidationMessageFor(model => model.JobCode, "", new { @class = "text-danger" })
                @Html.DataBrowserBtn(DataBrowserType.Position, "ID")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitCode, new { htmlAttributes = new { @class = "form-control col-md-11" } })
                @Html.ValidationMessageFor(model => model.UnitCode, "", new { @class = "text-danger" })
                @Html.DataBrowserBtn(DataBrowserType.WorkingUnit, "ID")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GroupCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GroupCode, new { htmlAttributes = new { @class = "form-control col-md-11" } })
                @Html.ValidationMessageFor(model => model.GroupCode, "", new { @class = "text-danger" })
                @Html.DataBrowserBtn(DataBrowserType.WorkingGroup, "ID")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@Html.DataBrowserWindow(DataBrowserType.Position)
@Html.DataBrowserWindow(DataBrowserType.WorkingUnit)
@Html.DataBrowserWindow(DataBrowserType.WorkingGroup)

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>

    // 目标输入框
    var databrowser_target_btn = null;
    var databrowser_target_input = null;

    // 开窗
    $(".btn-databrowser-open").on("click", function () {
        databrowser_target_btn = $(this);
        databrowser_target_input = $(this).siblings("input").eq(0);
    });

    // 修改目标输入框的值
    $(".databrowser-ok").on("click", function () {
        var target_property_name = databrowser_target_btn.data("property");
        var result = GetDataBrowserValue(this, target_property_name);
        databrowser_target_input.val(result);
        databrowser_target_input = null;
        $(this).parents(".modal").eq(0).modal('hide');
    });

    // 获取开窗选择的值
    function GetDataBrowserValue(target, pName) {
        var value = null;
        var selectors = $(target).parent().siblings(".modal-body").find(".databrowser-selector:checked");
        var columns = selectors.parent().siblings();
        $.each(columns, function (i) {
            var property_name = columns.eq(i).data("property");
            if (property_name == pName) {
                value = columns.eq(i).text();
            }
        });
        return value;
    }

</script>
